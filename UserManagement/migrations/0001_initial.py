# Generated by Django 3.2.4 on 2021-06-12 16:56

import UserManagement.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=64, unique=True, verbose_name='Username')),
                ('date_of_join', models.DateField(auto_now_add=True, verbose_name='Date Of Join')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date Of Birthday')),
                ('is_active', models.BooleanField(default=True, help_text='Active account in the system', verbose_name='Is Active')),
                ('is_staff', models.BooleanField(default=False, help_text='The user can access the system management section', verbose_name='Is Staff')),
                ('first_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Last Name')),
                ('gender', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Man'), (1, 'Female')], null=True, verbose_name='Gender')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', UserManagement.managers.UserManager()),
            ],
        ),
    ]
